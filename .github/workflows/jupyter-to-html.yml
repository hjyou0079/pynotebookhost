name: Convert Jupyter to HTML

on:
  push:
    branches: [ main ]
    paths:
      - 'notebook/*.ipynb'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'manual rebuild'

env:
  TRIGGER_TYPE: ${{ github.event_name == 'workflow_dispatch' && 'manual' || 'auto' }}

jobs:
  convert-and-publish:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jupyter nbconvert
        # Add any additional dependencies your notebooks might need
        pip install numpy pandas matplotlib
    
    - name: Create docs directory if it doesn't exist
      run: mkdir -p docs
    
    - name: Convert notebooks to HTML
      run: |
        echo "Current working directory: $(pwd)"
        echo "Listing notebook directory content:"
        ls -la notebook/
        
        if [ "${{ env.TRIGGER_TYPE }}" = "manual" ]; then
          echo "Running in manual mode - processing all notebooks"
          for file in notebook/*.ipynb; do
            if [ -f "$file" ]; then
              echo "Processing file: $file"
              if jupyter nbconvert --to html --output-dir=./docs "$file"; then
                echo "✅ Successfully converted $file"
              else
                echo "❌ Failed to convert $file"
                exit 1
              fi
            fi
          done
        else
          echo "Running in auto mode - processing modified and new notebooks"
          # Get both modified and added files
          echo "Debug: Running git diff command..."
          git_diff_output=$(git diff --diff-filter=AM --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Git diff output:"
          echo "$git_diff_output"
          echo "$git_diff_output" | grep '^notebook/.*\.ipynb$' | while read file
          do
            if [ -f "$file" ]; then
              echo "Processing file: $file ($(git diff --diff-filter=A --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^${file}$" && echo "new" || echo "modified"))"
              if jupyter nbconvert --to html --output-dir=./docs "$file"; then
                echo "✅ Successfully converted $file"
              else
                echo "❌ Failed to convert $file"
                exit 1
              fi
            fi
          done
        fi
        
        echo "Final docs directory content:"
        ls -la docs/
    
    - name: Create or update index.html
      run: |
        echo "<html><head><title>Jupyter Notebooks</title></head><body>" > docs/index.html
        echo "<h1>Jupyter Notebooks</h1><ul>" >> docs/index.html
        for file in docs/*.html; do
          if [ "$(basename "$file")" != "index.html" ]; then
            echo "<li><a href='$(basename "$file")'>${file%.html}</a></li>" >> docs/index.html
          fi
        done
        echo "</ul></body></html>" >> docs/index.html
    
    - name: Commit and push if changed
      run: |
        git config --global user.name "${{ github.repository_owner }}"
        # git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add docs/
        git commit -m "Convert Jupyter notebooks to HTML (${{ env.TRIGGER_TYPE }}) ${{ github.event.inputs.reason }}" || exit 0
        git push origin HEAD:${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'

  deploy:
    name: Deploy blog
    runs-on: ubuntu-latest
    needs: convert-and-publish
    permissions:
      contents: write
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          ACTIONS_STEP_DEBUG: true

